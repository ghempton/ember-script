// Generated by CoffeeScript 2.0.0-beta9-dev
var anyFragExpr, async, concatAll, createFragment, createIterator, fragmentHistory, fragmentize, fragments;
anyFragExpr = /#\s\((ember|coffee|js|live)\)\s*/;
fragments = [];
createFragment = function (lang, code) {
  return {
    type: lang,
    code: code
  };
};
fragmentHistory = ['js'];
fragmentize = function (code) {
  var curFragment, index, matchTxt, nextFragMatch;
  nextFragMatch = code.match(anyFragExpr);
  if (!nextFragMatch)
    return fragments.push(createFragment(fragmentHistory.shift(), code));
  matchTxt = nextFragMatch[0];
  index = code.indexOf(matchTxt);
  curFragment = code.slice(0, index);
  fragments.push(createFragment(fragmentHistory.shift(), curFragment));
  fragmentHistory.push(nextFragMatch[1]);
  return fragmentize(code.slice(index + matchTxt.length));
};
createIterator = function (compilers) {
  return function (fragment, cb) {
    var code, compiled, type;
    type = fragment.type;
    code = fragment.code;
    compiled = compilers[type](code);
    return cb(null, compiled);
  };
};
async = require('async');
concatAll = function (code, compilers, cb) {
  fragmentize(code);
  return async.concat(fragments, createIterator(compilers), function (err, results) {
    if (err)
      return next(err);
    return cb(results.join('\n'));
  });
};
module.exports = concatAll;
