// Generated by CoffeeScript 2.0.0-beta9-dev
var codeFor, comment, comments, fs, mergeParts, outCode;
fs = require('fs');
comments = {
  prepend: 'Prepended by emberscript code fragmentation',
  append: 'Appended by emberscript code fragmentation'
};
comment = function (msg) {
  return '// '.concat(comments.prepend).concat('\n');
};
codeFor = function (parts, name) {
  return comment(comments[name]).concat(parts[name]);
};
mergeParts = function (out, parts) {
  var append, prepend;
  if (!(typeof parts === 'object'))
    return out;
  if (parts.prepend) {
    prepend = codeFor(parts, 'prepend');
    out = prepend.concat(out);
  }
  if (parts.append) {
    append = codeFor(parts, 'append');
    out = out.concat(append);
  }
  return out;
};
outCode = {
  basic: function (out) {
    return '' + out + '\n';
  },
  fragmented: function (out, parts) {
    out = outCode.basic(out);
    if (parts)
      out = mergeParts(out, parts);
    return out;
  }
};
module.exports = function (options) {
  var outEmitter;
  outEmitter = options.fragmented ? outCode.fragmented : outCode.basic;
  return function (out) {
    outCode = outEmitter(out, options.parts);
    if (options.output) {
      return fs.writeFile(options.output, outCode, function (err) {
        if (null != err)
          throw err;
      });
    } else {
      return process.stdout.write(outCode);
    }
  };
};
