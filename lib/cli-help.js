// Generated by CoffeeScript 2.0.0-beta9-dev
var $0, $0, path;
path = require('path');
$0 = process.argv[0] === 'node' ? process.argv[1] : process.argv[0];
$0 = path.basename($0);
console.log('\nUsage: (OPT is interpreted by ' + $0 + ', ARG is passed to FILE)\n\n  ' + $0 + ' OPT* -{p,c,j,f} OPT*\n    example: ' + $0 + ' --js --no-optimise <input.coffee >output.js\n  ' + $0 + ' [-e] FILE {OPT,ARG}* [-- ARG*]\n    example: ' + $0 + ' myfile.coffee arg0 arg1\n  ' + $0 + ' OPT* [--repl] OPT*\n    example: ' + $0 + '\n\n-b, --bare              omit the top-level function wrapper\n-c, --compile           output a JSON-serialised AST representation of the output\n-e, --eval              evaluate compiled JavaScript\n-f, --cscodegen         output cscodegen-generated CoffeeScript code\n-i, --input FILE        file to be used as input instead of STDIN\n-I, --require FILE      require a library before a script is executed\n-j, --js                generate JavaScript output\n-l, --literate          treat the input as literate CoffeeScript code\n-m, --minify            run compiled javascript output through a JS minifier\n-o, --output FILE       file to be used as output instead of STDOUT\n-p, --parse             output a JSON-serialised AST representation of the input\n-v, --version           display the version number\n-w, --watch FILE        watch the given file/directory for changes\n--cli INPUT             pass a string from the command line as input\n--debug                 output intermediate representations on stderr for debug\n--help                  display this help message\n--nodejs OPTS           pass options through to the node binary\n--optimise              enable optimisations (default: on)\n--raw                   preserve source position and raw parse information\n--repl                  run an interactive CoffeeScript REPL\n--source-map            generate source map\n--source-map-file FILE  file used as output for source map when using --js\n\nUnless given --input or --cli flags, `' + $0 + '` will operate on stdin/stdout.\nWhen none of --{parse,compile,js,source-map,eval,cscodegen,repl} are given,\n  If positional arguments were given\n    * --eval is implied\n    * the first positional argument is used as an input filename\n    * additional positional arguments are passed as arguments to the script\n  Else --repl is implied\n');
